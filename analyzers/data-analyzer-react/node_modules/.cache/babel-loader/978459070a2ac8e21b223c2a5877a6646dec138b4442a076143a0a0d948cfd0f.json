{"ast":null,"code":"import _objectSpread from\"D:/AIE/analyzers/data-analyzer-react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"D:/AIE/analyzers/data-analyzer-react/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";const _excluded=[\"node\",\"inline\",\"className\",\"children\"];import React,{useState,useRef}from'react';import Papa from'papaparse';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,BarElement,Title,Tooltip,Legend}from'chart.js';import{Line}from'react-chartjs-2';import ReactMarkdown from'react-markdown';import{Prism as SyntaxHighlighter}from'react-syntax-highlighter';import{oneDark}from'react-syntax-highlighter/dist/esm/styles/prism';import remarkGfm from'remark-gfm';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,BarElement,Title,Tooltip,Legend);const App=()=>{const[csvData,setCsvData]=useState([]);const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState('');const[isDragOver,setIsDragOver]=useState(false);const fileInputRef=useRef(null);// AI Insights state\nconst[apiConfig,setApiConfig]=useState({key:'',endpoint:'https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions'});const[aiInsights,setAiInsights]=useState({content:'',isGenerating:false,error:''});const handleFileUpload=file=>{if(!file||file.type!=='text/csv'){setError('Please select a valid CSV file.');return;}setIsLoading(true);setError('');Papa.parse(file,{header:true,complete:results=>{setCsvData(results.data);setIsLoading(false);},error:error=>{console.error('Error parsing CSV:',error);setError('Error parsing CSV file. Please check the file format.');setIsLoading(false);}});};const handleFileSelect=event=>{var _event$target$files;const file=(_event$target$files=event.target.files)===null||_event$target$files===void 0?void 0:_event$target$files[0];if(file){handleFileUpload(file);}};const handleDragOver=event=>{event.preventDefault();setIsDragOver(true);};const handleDragLeave=event=>{event.preventDefault();setIsDragOver(false);};const handleDrop=event=>{event.preventDefault();setIsDragOver(false);const files=event.dataTransfer.files;if(files.length>0&&files[0].type==='text/csv'){handleFileUpload(files[0]);}else{setError('Please drop a valid CSV file.');}};const calculateStats=()=>{if(csvData.length===0)return null;const columns=Object.keys(csvData[0]);const totalRows=csvData.length;const numericColumns=columns.filter(col=>{return csvData.some(row=>!isNaN(parseFloat(String(row[col])))&&isFinite(Number(row[col])));});return{totalRows,totalColumns:columns.length,numericColumns:numericColumns.length,numericPercentage:Math.round(numericColumns.length/columns.length*100)};};const renderChart=()=>{if(csvData.length===0)return null;const columns=Object.keys(csvData[0]);const numericColumns=columns.filter(col=>{return csvData.some(row=>!isNaN(parseFloat(String(row[col])))&&isFinite(Number(row[col])));});const sampleData=csvData.slice(0,10).map((row,index)=>({x:index,y:numericColumns.length>0?parseFloat(String(row[numericColumns[0]]))||0:Math.random()*100}));const data={datasets:[{label:'Data Trend',data:sampleData,borderColor:'#a6e22e',backgroundColor:'rgba(166, 226, 46, 0.1)',tension:0.4}]};const options={responsive:true,plugins:{legend:{labels:{color:'#f8f8f2'}}},scales:{x:{ticks:{color:'#f8f8f2'},grid:{color:'#49483e'}},y:{ticks:{color:'#f8f8f2'},grid:{color:'#49483e'}}}};return/*#__PURE__*/_jsx(Line,{data:data,options:options});};const renderDataTable=()=>{if(csvData.length===0)return null;const columns=Object.keys(csvData[0]);const sampleData=csvData.slice(0,5);return/*#__PURE__*/_jsxs(\"div\",{className:\"data-table\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Sample Data (First 5 Rows)\"}),/*#__PURE__*/_jsx(\"div\",{className:\"table-container\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:columns.map(col=>/*#__PURE__*/_jsx(\"th\",{children:col},col))})}),/*#__PURE__*/_jsx(\"tbody\",{children:sampleData.map((row,index)=>/*#__PURE__*/_jsx(\"tr\",{children:columns.map(col=>/*#__PURE__*/_jsx(\"td\",{children:row[col]||'-'},col))},index))})]})})]});};// Custom components for markdown rendering\nconst CodeBlock=_ref=>{let{node,inline,className,children}=_ref,props=_objectWithoutProperties(_ref,_excluded);const match=/language-(\\w+)/.exec(className||'');const language=match?match[1]:'';return!inline&&language?/*#__PURE__*/_jsx(\"div\",{style:{maxWidth:'100%',overflow:'hidden'},children:/*#__PURE__*/_jsx(SyntaxHighlighter,_objectSpread(_objectSpread({style:oneDark,language:language,PreTag:\"div\",showLineNumbers:true,wrapLines:false,customStyle:{margin:0,borderRadius:'8px',maxWidth:'100%',overflowX:'auto',fontSize:'0.9em'}},props),{},{children:String(children).replace(/\\n$/,'')}))}):/*#__PURE__*/_jsx(\"code\",_objectSpread(_objectSpread({className:className,style:{wordBreak:'break-all',overflowWrap:'break-word'}},props),{},{children:children}));};const generateAiInsights=async()=>{if(csvData.length===0)return;if(!apiConfig.key){setAiInsights(prev=>_objectSpread(_objectSpread({},prev),{},{error:'Please configure your Qwen API key first!'}));return;}setAiInsights(prev=>_objectSpread(_objectSpread({},prev),{},{isGenerating:true,error:''}));try{const stats=calculateStats();const columns=Object.keys(csvData[0]);const sampleData=csvData.slice(0,10);// Prepare data summary for AI analysis\nconst dataSummary={totalRows:(stats===null||stats===void 0?void 0:stats.totalRows)||0,totalColumns:(stats===null||stats===void 0?void 0:stats.totalColumns)||0,numericColumns:(stats===null||stats===void 0?void 0:stats.numericColumns)||0,columns:columns,sampleData:sampleData};const prompt=\"You are a data analyst AI. Analyze this CSV dataset and provide insights. Here's the data summary:\\n\\nDataset Overview:\\n- Total Rows: \".concat(dataSummary.totalRows,\"\\n- Total Columns: \").concat(dataSummary.totalColumns,\"\\n- Numeric Columns: \").concat(dataSummary.numericColumns,\"\\n- Column Names: \").concat(dataSummary.columns.join(', '),\"\\n\\nSample Data (first 10 rows):\\n\").concat(JSON.stringify(dataSummary.sampleData,null,2),\"\\n\\nPlease provide a comprehensive analysis including:\\n1. **Data Quality Assessment** - Check for missing values, data types, consistency\\n2. **Statistical Summary** - Key metrics, distributions, outliers\\n3. **Patterns & Trends** - Any visible patterns, correlations, or trends\\n4. **Insights & Recommendations** - Business insights, potential issues, suggestions for improvement\\n5. **Data Visualization Ideas** - What charts/graphs would be most effective\\n\\nFormat your response with proper markdown, including headers, lists, and code blocks where appropriate. Be specific and actionable.\");const response=await callQwenAPI(prompt);setAiInsights(prev=>_objectSpread(_objectSpread({},prev),{},{content:response,isGenerating:false}));}catch(error){console.error('AI Insights Error:',error);setAiInsights(prev=>_objectSpread(_objectSpread({},prev),{},{error:'Failed to generate AI insights. Please check your API key and try again.',isGenerating:false}));}};const callQwenAPI=async message=>{// Try the DashScope native API first\ntry{const response=await fetch('https://dashscope.aliyuncs.com/api/v1/services/aigc/text-generation/generation',{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(apiConfig.key),'X-DashScope-SSE':'disable'},body:JSON.stringify({model:'qwen-turbo',input:{messages:[{role:'system',content:'You are a data analyst AI. Provide clear, accurate, and actionable insights about datasets. Use markdown formatting for better readability.'},{role:'user',content:message}]},parameters:{max_tokens:1500,temperature:0.7}})});if(!response.ok){const errorText=await response.text();console.error('DashScope API Error:',errorText);throw new Error(\"API request failed: \".concat(response.status,\" - \").concat(errorText));}const data=await response.json();console.log('DashScope API Response:',data);// DashScope native format\nif(data.output&&data.output.text){return data.output.text;}else{throw new Error('Invalid DashScope response format');}}catch(dashScopeError){console.warn('DashScope API failed, trying OpenAI-compatible endpoint:',dashScopeError);// Fallback to OpenAI-compatible endpoint\ntry{const response=await fetch('https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions',{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(apiConfig.key),'X-DashScope-SSE':'disable'},body:JSON.stringify({model:'qwen-turbo',messages:[{role:'system',content:'You are a data analyst AI. Provide clear, accurate, and actionable insights about datasets. Use markdown formatting for better readability.'},{role:'user',content:message}],max_tokens:1500,temperature:0.7,stream:false})});if(!response.ok){const errorText=await response.text();throw new Error(\"OpenAI-compatible API failed: \".concat(response.status,\" - \").concat(errorText));}const data=await response.json();console.log('OpenAI-compatible API Response:',data);// OpenAI-compatible format\nif(data.choices&&data.choices[0]&&data.choices[0].message){return data.choices[0].message.content;}else{throw new Error('Invalid OpenAI-compatible response format');}}catch(openAIError){console.error('Both API endpoints failed:',openAIError);throw new Error('Failed to connect to Qwen API. Please check your API key and internet connection.');}}};const renderAiInsights=()=>{if(csvData.length===0)return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"ai-insights-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83E\\uDD16 AI Insights\"}),!apiConfig.key&&/*#__PURE__*/_jsxs(\"div\",{className:\"api-config-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Configure Qwen API\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"api-input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"api-key\",children:\"Qwen API Key:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"api-key\",placeholder:\"Enter your Qwen API key here...\",value:apiConfig.key,onChange:e=>setApiConfig(prev=>_objectSpread(_objectSpread({},prev),{},{key:e.target.value}))})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"api-help\",children:[\"Get your free API key from \",/*#__PURE__*/_jsx(\"a\",{href:\"https://dashscope.aliyuncs.com/\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"DashScope Console\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"insights-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"generate-insights-btn\",onClick:generateAiInsights,disabled:aiInsights.isGenerating||!apiConfig.key,children:aiInsights.isGenerating?'🔄 Generating Insights...':'🧠 Generate AI Insights'})}),aiInsights.error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[\"\\u274C \",aiInsights.error]}),aiInsights.isGenerating&&/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"\\uD83E\\uDDE0 Analyzing your data with AI...\"}),aiInsights.content&&/*#__PURE__*/_jsx(\"div\",{className:\"insights-content\",children:/*#__PURE__*/_jsx(ReactMarkdown,{remarkPlugins:[remarkGfm],components:{code:CodeBlock},children:aiInsights.content})})]});};const stats=calculateStats();return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"app-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD83D\\uDCCA CSV Data Analyzer\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Upload your CSV files and get instant insights with beautiful visualizations\"})]}),/*#__PURE__*/_jsxs(\"main\",{className:\"app-main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"upload-area \".concat(isDragOver?'dragover':''),onDragOver:handleDragOver,onDragLeave:handleDragLeave,onDrop:handleDrop,onClick:()=>{var _fileInputRef$current;return(_fileInputRef$current=fileInputRef.current)===null||_fileInputRef$current===void 0?void 0:_fileInputRef$current.click();},children:[/*#__PURE__*/_jsx(\"div\",{className:\"upload-icon\",children:\"\\uD83D\\uDCC1\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Upload Your CSV File\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Drag and drop your CSV file here or click to browse\"}),/*#__PURE__*/_jsx(\"input\",{ref:fileInputRef,type:\"file\",accept:\".csv\",onChange:handleFileSelect,style:{display:'none'}}),/*#__PURE__*/_jsx(\"button\",{className:\"upload-button\",onClick:e=>{var _fileInputRef$current2;e.stopPropagation();(_fileInputRef$current2=fileInputRef.current)===null||_fileInputRef$current2===void 0?void 0:_fileInputRef$current2.click();},children:\"Choose File\"})]}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[\"\\u274C \",error]}),isLoading&&/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"\\uD83D\\uDCCA Analyzing your data...\"}),csvData.length>0&&stats&&/*#__PURE__*/_jsxs(\"div\",{className:\"analysis-results\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Analysis Results\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:stats.totalRows}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Total Rows\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:stats.totalColumns}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Columns\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:stats.numericColumns}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Numeric Columns\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-value\",children:[stats.numericPercentage,\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Numeric Data\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",children:renderChart()}),renderDataTable(),renderAiInsights()]})]})]});};export default App;","map":{"version":3,"names":["React","useState","useRef","Papa","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","Title","Tooltip","Legend","Line","ReactMarkdown","Prism","SyntaxHighlighter","oneDark","remarkGfm","jsx","_jsx","jsxs","_jsxs","register","App","csvData","setCsvData","isLoading","setIsLoading","error","setError","isDragOver","setIsDragOver","fileInputRef","apiConfig","setApiConfig","key","endpoint","aiInsights","setAiInsights","content","isGenerating","handleFileUpload","file","type","parse","header","complete","results","data","console","handleFileSelect","event","_event$target$files","target","files","handleDragOver","preventDefault","handleDragLeave","handleDrop","dataTransfer","length","calculateStats","columns","Object","keys","totalRows","numericColumns","filter","col","some","row","isNaN","parseFloat","String","isFinite","Number","totalColumns","numericPercentage","Math","round","renderChart","sampleData","slice","map","index","x","y","random","datasets","label","borderColor","backgroundColor","tension","options","responsive","plugins","legend","labels","color","scales","ticks","grid","renderDataTable","className","children","CodeBlock","_ref","node","inline","props","_objectWithoutProperties","_excluded","match","exec","language","style","maxWidth","overflow","_objectSpread","PreTag","showLineNumbers","wrapLines","customStyle","margin","borderRadius","overflowX","fontSize","replace","wordBreak","overflowWrap","generateAiInsights","prev","stats","dataSummary","prompt","concat","join","JSON","stringify","response","callQwenAPI","message","fetch","method","headers","body","model","input","messages","role","parameters","max_tokens","temperature","ok","errorText","text","Error","status","json","log","output","dashScopeError","warn","stream","choices","openAIError","renderAiInsights","htmlFor","id","placeholder","value","onChange","e","href","rel","onClick","disabled","remarkPlugins","components","code","onDragOver","onDragLeave","onDrop","_fileInputRef$current","current","click","ref","accept","display","_fileInputRef$current2","stopPropagation"],"sources":["D:/AIE/analyzers/data-analyzer-react/src/App.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport Papa from 'papaparse';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport { oneDark } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\nimport remarkGfm from 'remark-gfm';\r\nimport './App.css';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\ninterface DataRow {\r\n  [key: string]: string | number;\r\n}\r\n\r\ninterface FileData {\r\n  data: DataRow[];\r\n  errors: any[];\r\n  meta: {\r\n    delimiter: string;\r\n    linebreak: string;\r\n    aborted: boolean;\r\n    truncated: boolean;\r\n    cursor: number;\r\n  };\r\n}\r\n\r\ninterface ApiConfig {\r\n  key: string;\r\n  endpoint: string;\r\n}\r\n\r\ninterface AiInsights {\r\n  content: string;\r\n  isGenerating: boolean;\r\n  error: string;\r\n}\r\n\r\nconst App: React.FC = () => {\r\n  const [csvData, setCsvData] = useState<DataRow[]>([]);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string>('');\r\n  const [isDragOver, setIsDragOver] = useState<boolean>(false);\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  // AI Insights state\r\n  const [apiConfig, setApiConfig] = useState<ApiConfig>({\r\n    key: '',\r\n    endpoint: 'https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions'\r\n  });\r\n  const [aiInsights, setAiInsights] = useState<AiInsights>({\r\n    content: '',\r\n    isGenerating: false,\r\n    error: ''\r\n  });\r\n\r\n  const handleFileUpload = (file: File) => {\r\n    if (!file || file.type !== 'text/csv') {\r\n      setError('Please select a valid CSV file.');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setError('');\r\n\r\n    Papa.parse(file, {\r\n      header: true,\r\n      complete: (results: FileData) => {\r\n        setCsvData(results.data);\r\n        setIsLoading(false);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error parsing CSV:', error);\r\n        setError('Error parsing CSV file. Please check the file format.');\r\n        setIsLoading(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleFileSelect = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (file) {\r\n      handleFileUpload(file);\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (event: React.DragEvent<HTMLDivElement>) => {\r\n    event.preventDefault();\r\n    setIsDragOver(true);\r\n  };\r\n\r\n  const handleDragLeave = (event: React.DragEvent<HTMLDivElement>) => {\r\n    event.preventDefault();\r\n    setIsDragOver(false);\r\n  };\r\n\r\n  const handleDrop = (event: React.DragEvent<HTMLDivElement>) => {\r\n    event.preventDefault();\r\n    setIsDragOver(false);\r\n\r\n    const files = event.dataTransfer.files;\r\n    if (files.length > 0 && files[0].type === 'text/csv') {\r\n      handleFileUpload(files[0]);\r\n    } else {\r\n      setError('Please drop a valid CSV file.');\r\n    }\r\n  };\r\n\r\n  const calculateStats = () => {\r\n    if (csvData.length === 0) return null;\r\n\r\n    const columns = Object.keys(csvData[0]);\r\n    const totalRows = csvData.length;\r\n    const numericColumns = columns.filter(col => {\r\n      return csvData.some(row => !isNaN(parseFloat(String(row[col]))) && isFinite(Number(row[col])));\r\n    });\r\n\r\n    return {\r\n      totalRows,\r\n      totalColumns: columns.length,\r\n      numericColumns: numericColumns.length,\r\n      numericPercentage: Math.round((numericColumns.length / columns.length) * 100)\r\n    };\r\n  };\r\n\r\n  const renderChart = () => {\r\n    if (csvData.length === 0) return null;\r\n\r\n    const columns = Object.keys(csvData[0]);\r\n    const numericColumns = columns.filter(col => {\r\n      return csvData.some(row => !isNaN(parseFloat(String(row[col]))) && isFinite(Number(row[col])));\r\n    });\r\n\r\n    const sampleData = csvData.slice(0, 10).map((row, index) => ({\r\n      x: index,\r\n      y: numericColumns.length > 0 ? parseFloat(String(row[numericColumns[0]])) || 0 : Math.random() * 100\r\n    }));\r\n\r\n    const data = {\r\n      datasets: [{\r\n        label: 'Data Trend',\r\n        data: sampleData,\r\n        borderColor: '#a6e22e',\r\n        backgroundColor: 'rgba(166, 226, 46, 0.1)',\r\n        tension: 0.4\r\n      }]\r\n    };\r\n\r\n    const options = {\r\n      responsive: true,\r\n      plugins: {\r\n        legend: {\r\n          labels: {\r\n            color: '#f8f8f2'\r\n          }\r\n        }\r\n      },\r\n      scales: {\r\n        x: {\r\n          ticks: {\r\n            color: '#f8f8f2'\r\n          },\r\n          grid: {\r\n            color: '#49483e'\r\n          }\r\n        },\r\n        y: {\r\n          ticks: {\r\n            color: '#f8f8f2'\r\n          },\r\n          grid: {\r\n            color: '#49483e'\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    return <Line data={data} options={options} />;\r\n  };\r\n\r\n  const renderDataTable = () => {\r\n    if (csvData.length === 0) return null;\r\n\r\n    const columns = Object.keys(csvData[0]);\r\n    const sampleData = csvData.slice(0, 5);\r\n\r\n    return (\r\n      <div className=\"data-table\">\r\n        <h4>Sample Data (First 5 Rows)</h4>\r\n        <div className=\"table-container\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                {columns.map(col => (\r\n                  <th key={col}>{col}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {sampleData.map((row, index) => (\r\n                <tr key={index}>\r\n                  {columns.map(col => (\r\n                    <td key={col}>{row[col] || '-'}</td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Custom components for markdown rendering\r\n  const CodeBlock = ({ node, inline, className, children, ...props }: any) => {\r\n    const match = /language-(\\w+)/.exec(className || '');\r\n    const language = match ? match[1] : '';\r\n\r\n    return !inline && language ? (\r\n      <div style={{ maxWidth: '100%', overflow: 'hidden' }}>\r\n        <SyntaxHighlighter\r\n          style={oneDark}\r\n          language={language}\r\n          PreTag=\"div\"\r\n          showLineNumbers={true}\r\n          wrapLines={false}\r\n          customStyle={{\r\n            margin: 0,\r\n            borderRadius: '8px',\r\n            maxWidth: '100%',\r\n            overflowX: 'auto',\r\n            fontSize: '0.9em'\r\n          }}\r\n          {...props}\r\n        >\r\n          {String(children).replace(/\\n$/, '')}\r\n        </SyntaxHighlighter>\r\n      </div>\r\n    ) : (\r\n      <code className={className} style={{ wordBreak: 'break-all', overflowWrap: 'break-word' }} {...props}>\r\n        {children}\r\n      </code>\r\n    );\r\n  };\r\n\r\n  const generateAiInsights = async () => {\r\n    if (csvData.length === 0) return;\r\n    if (!apiConfig.key) {\r\n      setAiInsights(prev => ({ ...prev, error: 'Please configure your Qwen API key first!' }));\r\n      return;\r\n    }\r\n\r\n    setAiInsights(prev => ({ ...prev, isGenerating: true, error: '' }));\r\n\r\n    try {\r\n      const stats = calculateStats();\r\n      const columns = Object.keys(csvData[0]);\r\n      const sampleData = csvData.slice(0, 10);\r\n\r\n      // Prepare data summary for AI analysis\r\n      const dataSummary = {\r\n        totalRows: stats?.totalRows || 0,\r\n        totalColumns: stats?.totalColumns || 0,\r\n        numericColumns: stats?.numericColumns || 0,\r\n        columns: columns,\r\n        sampleData: sampleData\r\n      };\r\n\r\n      const prompt = `You are a data analyst AI. Analyze this CSV dataset and provide insights. Here's the data summary:\r\n\r\nDataset Overview:\r\n- Total Rows: ${dataSummary.totalRows}\r\n- Total Columns: ${dataSummary.totalColumns}\r\n- Numeric Columns: ${dataSummary.numericColumns}\r\n- Column Names: ${dataSummary.columns.join(', ')}\r\n\r\nSample Data (first 10 rows):\r\n${JSON.stringify(dataSummary.sampleData, null, 2)}\r\n\r\nPlease provide a comprehensive analysis including:\r\n1. **Data Quality Assessment** - Check for missing values, data types, consistency\r\n2. **Statistical Summary** - Key metrics, distributions, outliers\r\n3. **Patterns & Trends** - Any visible patterns, correlations, or trends\r\n4. **Insights & Recommendations** - Business insights, potential issues, suggestions for improvement\r\n5. **Data Visualization Ideas** - What charts/graphs would be most effective\r\n\r\nFormat your response with proper markdown, including headers, lists, and code blocks where appropriate. Be specific and actionable.`;\r\n\r\n      const response = await callQwenAPI(prompt);\r\n      setAiInsights(prev => ({ ...prev, content: response, isGenerating: false }));\r\n    } catch (error) {\r\n      console.error('AI Insights Error:', error);\r\n      setAiInsights(prev => ({\r\n        ...prev,\r\n        error: 'Failed to generate AI insights. Please check your API key and try again.',\r\n        isGenerating: false\r\n      }));\r\n    }\r\n  };\r\n\r\n  const callQwenAPI = async (message: string): Promise<string> => {\r\n    // Try the DashScope native API first\r\n    try {\r\n      const response = await fetch('https://dashscope.aliyuncs.com/api/v1/services/aigc/text-generation/generation', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${apiConfig.key}`,\r\n          'X-DashScope-SSE': 'disable'\r\n        },\r\n        body: JSON.stringify({\r\n          model: 'qwen-turbo',\r\n          input: {\r\n            messages: [\r\n              {\r\n                role: 'system',\r\n                content: 'You are a data analyst AI. Provide clear, accurate, and actionable insights about datasets. Use markdown formatting for better readability.'\r\n              },\r\n              {\r\n                role: 'user',\r\n                content: message\r\n              }\r\n            ]\r\n          },\r\n          parameters: {\r\n            max_tokens: 1500,\r\n            temperature: 0.7\r\n          }\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        console.error('DashScope API Error:', errorText);\r\n        throw new Error(`API request failed: ${response.status} - ${errorText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('DashScope API Response:', data);\r\n\r\n      // DashScope native format\r\n      if (data.output && data.output.text) {\r\n        return data.output.text;\r\n      } else {\r\n        throw new Error('Invalid DashScope response format');\r\n      }\r\n    } catch (dashScopeError) {\r\n      console.warn('DashScope API failed, trying OpenAI-compatible endpoint:', dashScopeError);\r\n\r\n      // Fallback to OpenAI-compatible endpoint\r\n      try {\r\n        const response = await fetch('https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${apiConfig.key}`,\r\n            'X-DashScope-SSE': 'disable'\r\n          },\r\n          body: JSON.stringify({\r\n            model: 'qwen-turbo',\r\n            messages: [\r\n              {\r\n                role: 'system',\r\n                content: 'You are a data analyst AI. Provide clear, accurate, and actionable insights about datasets. Use markdown formatting for better readability.'\r\n              },\r\n              {\r\n                role: 'user',\r\n                content: message\r\n              }\r\n            ],\r\n            max_tokens: 1500,\r\n            temperature: 0.7,\r\n            stream: false\r\n          })\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const errorText = await response.text();\r\n          throw new Error(`OpenAI-compatible API failed: ${response.status} - ${errorText}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('OpenAI-compatible API Response:', data);\r\n\r\n        // OpenAI-compatible format\r\n        if (data.choices && data.choices[0] && data.choices[0].message) {\r\n          return data.choices[0].message.content;\r\n        } else {\r\n          throw new Error('Invalid OpenAI-compatible response format');\r\n        }\r\n      } catch (openAIError) {\r\n        console.error('Both API endpoints failed:', openAIError);\r\n        throw new Error('Failed to connect to Qwen API. Please check your API key and internet connection.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderAiInsights = () => {\r\n    if (csvData.length === 0) return null;\r\n\r\n    return (\r\n      <div className=\"ai-insights-section\">\r\n        <h3>🤖 AI Insights</h3>\r\n\r\n        {!apiConfig.key && (\r\n          <div className=\"api-config-section\">\r\n            <h4>Configure Qwen API</h4>\r\n            <div className=\"api-input-group\">\r\n              <label htmlFor=\"api-key\">Qwen API Key:</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"api-key\"\r\n                placeholder=\"Enter your Qwen API key here...\"\r\n                value={apiConfig.key}\r\n                onChange={(e) => setApiConfig(prev => ({ ...prev, key: e.target.value }))}\r\n              />\r\n            </div>\r\n            <p className=\"api-help\">\r\n              Get your free API key from <a href=\"https://dashscope.aliyuncs.com/\" target=\"_blank\" rel=\"noopener noreferrer\">DashScope Console</a>\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"insights-actions\">\r\n          <button\r\n            className=\"generate-insights-btn\"\r\n            onClick={generateAiInsights}\r\n            disabled={aiInsights.isGenerating || !apiConfig.key}\r\n          >\r\n            {aiInsights.isGenerating ? '🔄 Generating Insights...' : '🧠 Generate AI Insights'}\r\n          </button>\r\n        </div>\r\n\r\n        {aiInsights.error && (\r\n          <div className=\"error-message\">\r\n            ❌ {aiInsights.error}\r\n          </div>\r\n        )}\r\n\r\n        {aiInsights.isGenerating && (\r\n          <div className=\"loading\">\r\n            🧠 Analyzing your data with AI...\r\n          </div>\r\n        )}\r\n\r\n        {aiInsights.content && (\r\n          <div className=\"insights-content\">\r\n            <ReactMarkdown\r\n              remarkPlugins={[remarkGfm]}\r\n              components={{\r\n                code: CodeBlock,\r\n              }}\r\n            >\r\n              {aiInsights.content}\r\n            </ReactMarkdown>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const stats = calculateStats();\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <header className=\"app-header\">\r\n        <h1>📊 CSV Data Analyzer</h1>\r\n        <p>Upload your CSV files and get instant insights with beautiful visualizations</p>\r\n      </header>\r\n\r\n      <main className=\"app-main\">\r\n        <div\r\n          className={`upload-area ${isDragOver ? 'dragover' : ''}`}\r\n          onDragOver={handleDragOver}\r\n          onDragLeave={handleDragLeave}\r\n          onDrop={handleDrop}\r\n          onClick={() => fileInputRef.current?.click()}\r\n        >\r\n          <div className=\"upload-icon\">📁</div>\r\n          <h3>Upload Your CSV File</h3>\r\n          <p>Drag and drop your CSV file here or click to browse</p>\r\n          <input\r\n            ref={fileInputRef}\r\n            type=\"file\"\r\n            accept=\".csv\"\r\n            onChange={handleFileSelect}\r\n            style={{ display: 'none' }}\r\n          />\r\n          <button className=\"upload-button\" onClick={(e) => {\r\n            e.stopPropagation();\r\n            fileInputRef.current?.click();\r\n          }}>\r\n            Choose File\r\n          </button>\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"error-message\">\r\n            ❌ {error}\r\n          </div>\r\n        )}\r\n\r\n        {isLoading && (\r\n          <div className=\"loading\">\r\n            📊 Analyzing your data...\r\n          </div>\r\n        )}\r\n\r\n        {csvData.length > 0 && stats && (\r\n          <div className=\"analysis-results\">\r\n            <h3>Analysis Results</h3>\r\n\r\n            <div className=\"stats-grid\">\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-value\">{stats.totalRows}</div>\r\n                <div className=\"stat-label\">Total Rows</div>\r\n              </div>\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-value\">{stats.totalColumns}</div>\r\n                <div className=\"stat-label\">Columns</div>\r\n              </div>\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-value\">{stats.numericColumns}</div>\r\n                <div className=\"stat-label\">Numeric Columns</div>\r\n              </div>\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-value\">{stats.numericPercentage}%</div>\r\n                <div className=\"stat-label\">Numeric Data</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"chart-container\">\r\n              {renderChart()}\r\n            </div>\r\n\r\n            {renderDataTable()}\r\n\r\n            {renderAiInsights()}\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"gUAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,MAAM,KAAQ,OAAO,CAC/C,MAAO,CAAAC,IAAI,KAAM,WAAW,CAC5B,OACEC,KAAK,GAAI,CAAAC,OAAO,CAChBC,aAAa,CACbC,WAAW,CACXC,YAAY,CACZC,WAAW,CACXC,UAAU,CACVC,KAAK,CACLC,OAAO,CACPC,MAAM,KACD,UAAU,CACjB,OAASC,IAAI,KAAQ,iBAAiB,CACtC,MAAO,CAAAC,aAAa,KAAM,gBAAgB,CAC1C,OAASC,KAAK,GAAI,CAAAC,iBAAiB,KAAQ,0BAA0B,CACrE,OAASC,OAAO,KAAQ,gDAAgD,CACxE,MAAO,CAAAC,SAAS,KAAM,YAAY,CAClC,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnBlB,OAAO,CAACmB,QAAQ,CACdlB,aAAa,CACbC,WAAW,CACXC,YAAY,CACZC,WAAW,CACXC,UAAU,CACVC,KAAK,CACLC,OAAO,CACPC,MACF,CAAC,CA6BD,KAAM,CAAAY,GAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAG1B,QAAQ,CAAY,EAAE,CAAC,CACrD,KAAM,CAAC2B,SAAS,CAAEC,YAAY,CAAC,CAAG5B,QAAQ,CAAU,KAAK,CAAC,CAC1D,KAAM,CAAC6B,KAAK,CAAEC,QAAQ,CAAC,CAAG9B,QAAQ,CAAS,EAAE,CAAC,CAC9C,KAAM,CAAC+B,UAAU,CAAEC,aAAa,CAAC,CAAGhC,QAAQ,CAAU,KAAK,CAAC,CAC5D,KAAM,CAAAiC,YAAY,CAAGhC,MAAM,CAAmB,IAAI,CAAC,CAEnD;AACA,KAAM,CAACiC,SAAS,CAAEC,YAAY,CAAC,CAAGnC,QAAQ,CAAY,CACpDoC,GAAG,CAAE,EAAE,CACPC,QAAQ,CAAE,oEACZ,CAAC,CAAC,CACF,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGvC,QAAQ,CAAa,CACvDwC,OAAO,CAAE,EAAE,CACXC,YAAY,CAAE,KAAK,CACnBZ,KAAK,CAAE,EACT,CAAC,CAAC,CAEF,KAAM,CAAAa,gBAAgB,CAAIC,IAAU,EAAK,CACvC,GAAI,CAACA,IAAI,EAAIA,IAAI,CAACC,IAAI,GAAK,UAAU,CAAE,CACrCd,QAAQ,CAAC,iCAAiC,CAAC,CAC3C,OACF,CAEAF,YAAY,CAAC,IAAI,CAAC,CAClBE,QAAQ,CAAC,EAAE,CAAC,CAEZ5B,IAAI,CAAC2C,KAAK,CAACF,IAAI,CAAE,CACfG,MAAM,CAAE,IAAI,CACZC,QAAQ,CAAGC,OAAiB,EAAK,CAC/BtB,UAAU,CAACsB,OAAO,CAACC,IAAI,CAAC,CACxBrB,YAAY,CAAC,KAAK,CAAC,CACrB,CAAC,CACDC,KAAK,CAAGA,KAAK,EAAK,CAChBqB,OAAO,CAACrB,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC1CC,QAAQ,CAAC,uDAAuD,CAAC,CACjEF,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAuB,gBAAgB,CAAIC,KAA0C,EAAK,KAAAC,mBAAA,CACvE,KAAM,CAAAV,IAAI,EAAAU,mBAAA,CAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,UAAAF,mBAAA,iBAAlBA,mBAAA,CAAqB,CAAC,CAAC,CACpC,GAAIV,IAAI,CAAE,CACRD,gBAAgB,CAACC,IAAI,CAAC,CACxB,CACF,CAAC,CAED,KAAM,CAAAa,cAAc,CAAIJ,KAAsC,EAAK,CACjEA,KAAK,CAACK,cAAc,CAAC,CAAC,CACtBzB,aAAa,CAAC,IAAI,CAAC,CACrB,CAAC,CAED,KAAM,CAAA0B,eAAe,CAAIN,KAAsC,EAAK,CAClEA,KAAK,CAACK,cAAc,CAAC,CAAC,CACtBzB,aAAa,CAAC,KAAK,CAAC,CACtB,CAAC,CAED,KAAM,CAAA2B,UAAU,CAAIP,KAAsC,EAAK,CAC7DA,KAAK,CAACK,cAAc,CAAC,CAAC,CACtBzB,aAAa,CAAC,KAAK,CAAC,CAEpB,KAAM,CAAAuB,KAAK,CAAGH,KAAK,CAACQ,YAAY,CAACL,KAAK,CACtC,GAAIA,KAAK,CAACM,MAAM,CAAG,CAAC,EAAIN,KAAK,CAAC,CAAC,CAAC,CAACX,IAAI,GAAK,UAAU,CAAE,CACpDF,gBAAgB,CAACa,KAAK,CAAC,CAAC,CAAC,CAAC,CAC5B,CAAC,IAAM,CACLzB,QAAQ,CAAC,+BAA+B,CAAC,CAC3C,CACF,CAAC,CAED,KAAM,CAAAgC,cAAc,CAAGA,CAAA,GAAM,CAC3B,GAAIrC,OAAO,CAACoC,MAAM,GAAK,CAAC,CAAE,MAAO,KAAI,CAErC,KAAM,CAAAE,OAAO,CAAGC,MAAM,CAACC,IAAI,CAACxC,OAAO,CAAC,CAAC,CAAC,CAAC,CACvC,KAAM,CAAAyC,SAAS,CAAGzC,OAAO,CAACoC,MAAM,CAChC,KAAM,CAAAM,cAAc,CAAGJ,OAAO,CAACK,MAAM,CAACC,GAAG,EAAI,CAC3C,MAAO,CAAA5C,OAAO,CAAC6C,IAAI,CAACC,GAAG,EAAI,CAACC,KAAK,CAACC,UAAU,CAACC,MAAM,CAACH,GAAG,CAACF,GAAG,CAAC,CAAC,CAAC,CAAC,EAAIM,QAAQ,CAACC,MAAM,CAACL,GAAG,CAACF,GAAG,CAAC,CAAC,CAAC,CAAC,CAChG,CAAC,CAAC,CAEF,MAAO,CACLH,SAAS,CACTW,YAAY,CAAEd,OAAO,CAACF,MAAM,CAC5BM,cAAc,CAAEA,cAAc,CAACN,MAAM,CACrCiB,iBAAiB,CAAEC,IAAI,CAACC,KAAK,CAAEb,cAAc,CAACN,MAAM,CAAGE,OAAO,CAACF,MAAM,CAAI,GAAG,CAC9E,CAAC,CACH,CAAC,CAED,KAAM,CAAAoB,WAAW,CAAGA,CAAA,GAAM,CACxB,GAAIxD,OAAO,CAACoC,MAAM,GAAK,CAAC,CAAE,MAAO,KAAI,CAErC,KAAM,CAAAE,OAAO,CAAGC,MAAM,CAACC,IAAI,CAACxC,OAAO,CAAC,CAAC,CAAC,CAAC,CACvC,KAAM,CAAA0C,cAAc,CAAGJ,OAAO,CAACK,MAAM,CAACC,GAAG,EAAI,CAC3C,MAAO,CAAA5C,OAAO,CAAC6C,IAAI,CAACC,GAAG,EAAI,CAACC,KAAK,CAACC,UAAU,CAACC,MAAM,CAACH,GAAG,CAACF,GAAG,CAAC,CAAC,CAAC,CAAC,EAAIM,QAAQ,CAACC,MAAM,CAACL,GAAG,CAACF,GAAG,CAAC,CAAC,CAAC,CAAC,CAChG,CAAC,CAAC,CAEF,KAAM,CAAAa,UAAU,CAAGzD,OAAO,CAAC0D,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAACC,GAAG,CAAC,CAACb,GAAG,CAAEc,KAAK,IAAM,CAC3DC,CAAC,CAAED,KAAK,CACRE,CAAC,CAAEpB,cAAc,CAACN,MAAM,CAAG,CAAC,CAAGY,UAAU,CAACC,MAAM,CAACH,GAAG,CAACJ,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAI,CAAC,CAAGY,IAAI,CAACS,MAAM,CAAC,CAAC,CAAG,GACnG,CAAC,CAAC,CAAC,CAEH,KAAM,CAAAvC,IAAI,CAAG,CACXwC,QAAQ,CAAE,CAAC,CACTC,KAAK,CAAE,YAAY,CACnBzC,IAAI,CAAEiC,UAAU,CAChBS,WAAW,CAAE,SAAS,CACtBC,eAAe,CAAE,yBAAyB,CAC1CC,OAAO,CAAE,GACX,CAAC,CACH,CAAC,CAED,KAAM,CAAAC,OAAO,CAAG,CACdC,UAAU,CAAE,IAAI,CAChBC,OAAO,CAAE,CACPC,MAAM,CAAE,CACNC,MAAM,CAAE,CACNC,KAAK,CAAE,SACT,CACF,CACF,CAAC,CACDC,MAAM,CAAE,CACNd,CAAC,CAAE,CACDe,KAAK,CAAE,CACLF,KAAK,CAAE,SACT,CAAC,CACDG,IAAI,CAAE,CACJH,KAAK,CAAE,SACT,CACF,CAAC,CACDZ,CAAC,CAAE,CACDc,KAAK,CAAE,CACLF,KAAK,CAAE,SACT,CAAC,CACDG,IAAI,CAAE,CACJH,KAAK,CAAE,SACT,CACF,CACF,CACF,CAAC,CAED,mBAAO/E,IAAA,CAACP,IAAI,EAACoC,IAAI,CAAEA,IAAK,CAAC6C,OAAO,CAAEA,OAAQ,CAAE,CAAC,CAC/C,CAAC,CAED,KAAM,CAAAS,eAAe,CAAGA,CAAA,GAAM,CAC5B,GAAI9E,OAAO,CAACoC,MAAM,GAAK,CAAC,CAAE,MAAO,KAAI,CAErC,KAAM,CAAAE,OAAO,CAAGC,MAAM,CAACC,IAAI,CAACxC,OAAO,CAAC,CAAC,CAAC,CAAC,CACvC,KAAM,CAAAyD,UAAU,CAAGzD,OAAO,CAAC0D,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAEtC,mBACE7D,KAAA,QAAKkF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBrF,IAAA,OAAAqF,QAAA,CAAI,4BAA0B,CAAI,CAAC,cACnCrF,IAAA,QAAKoF,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAC9BnF,KAAA,UAAAmF,QAAA,eACErF,IAAA,UAAAqF,QAAA,cACErF,IAAA,OAAAqF,QAAA,CACG1C,OAAO,CAACqB,GAAG,CAACf,GAAG,eACdjD,IAAA,OAAAqF,QAAA,CAAepC,GAAG,EAATA,GAAc,CACxB,CAAC,CACA,CAAC,CACA,CAAC,cACRjD,IAAA,UAAAqF,QAAA,CACGvB,UAAU,CAACE,GAAG,CAAC,CAACb,GAAG,CAAEc,KAAK,gBACzBjE,IAAA,OAAAqF,QAAA,CACG1C,OAAO,CAACqB,GAAG,CAACf,GAAG,eACdjD,IAAA,OAAAqF,QAAA,CAAelC,GAAG,CAACF,GAAG,CAAC,EAAI,GAAG,EAArBA,GAA0B,CACpC,CAAC,EAHKgB,KAIL,CACL,CAAC,CACG,CAAC,EACH,CAAC,CACL,CAAC,EACH,CAAC,CAEV,CAAC,CAED;AACA,KAAM,CAAAqB,SAAS,CAAGC,IAAA,EAA0D,IAAzD,CAAEC,IAAI,CAAEC,MAAM,CAAEL,SAAS,CAAEC,QAAwB,CAAC,CAAAE,IAAA,CAAZG,KAAK,CAAAC,wBAAA,CAAAJ,IAAA,CAAAK,SAAA,EAC9D,KAAM,CAAAC,KAAK,CAAG,gBAAgB,CAACC,IAAI,CAACV,SAAS,EAAI,EAAE,CAAC,CACpD,KAAM,CAAAW,QAAQ,CAAGF,KAAK,CAAGA,KAAK,CAAC,CAAC,CAAC,CAAG,EAAE,CAEtC,MAAO,CAACJ,MAAM,EAAIM,QAAQ,cACxB/F,IAAA,QAAKgG,KAAK,CAAE,CAAEC,QAAQ,CAAE,MAAM,CAAEC,QAAQ,CAAE,QAAS,CAAE,CAAAb,QAAA,cACnDrF,IAAA,CAACJ,iBAAiB,CAAAuG,aAAA,CAAAA,aAAA,EAChBH,KAAK,CAAEnG,OAAQ,CACfkG,QAAQ,CAAEA,QAAS,CACnBK,MAAM,CAAC,KAAK,CACZC,eAAe,CAAE,IAAK,CACtBC,SAAS,CAAE,KAAM,CACjBC,WAAW,CAAE,CACXC,MAAM,CAAE,CAAC,CACTC,YAAY,CAAE,KAAK,CACnBR,QAAQ,CAAE,MAAM,CAChBS,SAAS,CAAE,MAAM,CACjBC,QAAQ,CAAE,OACZ,CAAE,EACEjB,KAAK,MAAAL,QAAA,CAER/B,MAAM,CAAC+B,QAAQ,CAAC,CAACuB,OAAO,CAAC,KAAK,CAAE,EAAE,CAAC,EACnB,CAAC,CACjB,CAAC,cAEN5G,IAAA,QAAAmG,aAAA,CAAAA,aAAA,EAAMf,SAAS,CAAEA,SAAU,CAACY,KAAK,CAAE,CAAEa,SAAS,CAAE,WAAW,CAAEC,YAAY,CAAE,YAAa,CAAE,EAAKpB,KAAK,MAAAL,QAAA,CACjGA,QAAQ,EACL,CACP,CACH,CAAC,CAED,KAAM,CAAA0B,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI1G,OAAO,CAACoC,MAAM,GAAK,CAAC,CAAE,OAC1B,GAAI,CAAC3B,SAAS,CAACE,GAAG,CAAE,CAClBG,aAAa,CAAC6F,IAAI,EAAAb,aAAA,CAAAA,aAAA,IAAUa,IAAI,MAAEvG,KAAK,CAAE,2CAA2C,EAAG,CAAC,CACxF,OACF,CAEAU,aAAa,CAAC6F,IAAI,EAAAb,aAAA,CAAAA,aAAA,IAAUa,IAAI,MAAE3F,YAAY,CAAE,IAAI,CAAEZ,KAAK,CAAE,EAAE,EAAG,CAAC,CAEnE,GAAI,CACF,KAAM,CAAAwG,KAAK,CAAGvE,cAAc,CAAC,CAAC,CAC9B,KAAM,CAAAC,OAAO,CAAGC,MAAM,CAACC,IAAI,CAACxC,OAAO,CAAC,CAAC,CAAC,CAAC,CACvC,KAAM,CAAAyD,UAAU,CAAGzD,OAAO,CAAC0D,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAEvC;AACA,KAAM,CAAAmD,WAAW,CAAG,CAClBpE,SAAS,CAAE,CAAAmE,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAEnE,SAAS,GAAI,CAAC,CAChCW,YAAY,CAAE,CAAAwD,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAExD,YAAY,GAAI,CAAC,CACtCV,cAAc,CAAE,CAAAkE,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAElE,cAAc,GAAI,CAAC,CAC1CJ,OAAO,CAAEA,OAAO,CAChBmB,UAAU,CAAEA,UACd,CAAC,CAED,KAAM,CAAAqD,MAAM,2IAAAC,MAAA,CAGFF,WAAW,CAACpE,SAAS,wBAAAsE,MAAA,CAClBF,WAAW,CAACzD,YAAY,0BAAA2D,MAAA,CACtBF,WAAW,CAACnE,cAAc,uBAAAqE,MAAA,CAC7BF,WAAW,CAACvE,OAAO,CAAC0E,IAAI,CAAC,IAAI,CAAC,uCAAAD,MAAA,CAG9CE,IAAI,CAACC,SAAS,CAACL,WAAW,CAACpD,UAAU,CAAE,IAAI,CAAE,CAAC,CAAC,slBASmF,CAE9H,KAAM,CAAA0D,QAAQ,CAAG,KAAM,CAAAC,WAAW,CAACN,MAAM,CAAC,CAC1ChG,aAAa,CAAC6F,IAAI,EAAAb,aAAA,CAAAA,aAAA,IAAUa,IAAI,MAAE5F,OAAO,CAAEoG,QAAQ,CAAEnG,YAAY,CAAE,KAAK,EAAG,CAAC,CAC9E,CAAE,MAAOZ,KAAK,CAAE,CACdqB,OAAO,CAACrB,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC1CU,aAAa,CAAC6F,IAAI,EAAAb,aAAA,CAAAA,aAAA,IACba,IAAI,MACPvG,KAAK,CAAE,0EAA0E,CACjFY,YAAY,CAAE,KAAK,EACnB,CAAC,CACL,CACF,CAAC,CAED,KAAM,CAAAoG,WAAW,CAAG,KAAO,CAAAC,OAAe,EAAsB,CAC9D;AACA,GAAI,CACF,KAAM,CAAAF,QAAQ,CAAG,KAAM,CAAAG,KAAK,CAAC,gFAAgF,CAAE,CAC7GC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClC,eAAe,WAAAT,MAAA,CAAYtG,SAAS,CAACE,GAAG,CAAE,CAC1C,iBAAiB,CAAE,SACrB,CAAC,CACD8G,IAAI,CAAER,IAAI,CAACC,SAAS,CAAC,CACnBQ,KAAK,CAAE,YAAY,CACnBC,KAAK,CAAE,CACLC,QAAQ,CAAE,CACR,CACEC,IAAI,CAAE,QAAQ,CACd9G,OAAO,CAAE,6IACX,CAAC,CACD,CACE8G,IAAI,CAAE,MAAM,CACZ9G,OAAO,CAAEsG,OACX,CAAC,CAEL,CAAC,CACDS,UAAU,CAAE,CACVC,UAAU,CAAE,IAAI,CAChBC,WAAW,CAAE,GACf,CACF,CAAC,CACH,CAAC,CAAC,CAEF,GAAI,CAACb,QAAQ,CAACc,EAAE,CAAE,CAChB,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAAf,QAAQ,CAACgB,IAAI,CAAC,CAAC,CACvC1G,OAAO,CAACrB,KAAK,CAAC,sBAAsB,CAAE8H,SAAS,CAAC,CAChD,KAAM,IAAI,CAAAE,KAAK,wBAAArB,MAAA,CAAwBI,QAAQ,CAACkB,MAAM,QAAAtB,MAAA,CAAMmB,SAAS,CAAE,CAAC,CAC1E,CAEA,KAAM,CAAA1G,IAAI,CAAG,KAAM,CAAA2F,QAAQ,CAACmB,IAAI,CAAC,CAAC,CAClC7G,OAAO,CAAC8G,GAAG,CAAC,yBAAyB,CAAE/G,IAAI,CAAC,CAE5C;AACA,GAAIA,IAAI,CAACgH,MAAM,EAAIhH,IAAI,CAACgH,MAAM,CAACL,IAAI,CAAE,CACnC,MAAO,CAAA3G,IAAI,CAACgH,MAAM,CAACL,IAAI,CACzB,CAAC,IAAM,CACL,KAAM,IAAI,CAAAC,KAAK,CAAC,mCAAmC,CAAC,CACtD,CACF,CAAE,MAAOK,cAAc,CAAE,CACvBhH,OAAO,CAACiH,IAAI,CAAC,0DAA0D,CAAED,cAAc,CAAC,CAExF;AACA,GAAI,CACF,KAAM,CAAAtB,QAAQ,CAAG,KAAM,CAAAG,KAAK,CAAC,oEAAoE,CAAE,CACjGC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClC,eAAe,WAAAT,MAAA,CAAYtG,SAAS,CAACE,GAAG,CAAE,CAC1C,iBAAiB,CAAE,SACrB,CAAC,CACD8G,IAAI,CAAER,IAAI,CAACC,SAAS,CAAC,CACnBQ,KAAK,CAAE,YAAY,CACnBE,QAAQ,CAAE,CACR,CACEC,IAAI,CAAE,QAAQ,CACd9G,OAAO,CAAE,6IACX,CAAC,CACD,CACE8G,IAAI,CAAE,MAAM,CACZ9G,OAAO,CAAEsG,OACX,CAAC,CACF,CACDU,UAAU,CAAE,IAAI,CAChBC,WAAW,CAAE,GAAG,CAChBW,MAAM,CAAE,KACV,CAAC,CACH,CAAC,CAAC,CAEF,GAAI,CAACxB,QAAQ,CAACc,EAAE,CAAE,CAChB,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAAf,QAAQ,CAACgB,IAAI,CAAC,CAAC,CACvC,KAAM,IAAI,CAAAC,KAAK,kCAAArB,MAAA,CAAkCI,QAAQ,CAACkB,MAAM,QAAAtB,MAAA,CAAMmB,SAAS,CAAE,CAAC,CACpF,CAEA,KAAM,CAAA1G,IAAI,CAAG,KAAM,CAAA2F,QAAQ,CAACmB,IAAI,CAAC,CAAC,CAClC7G,OAAO,CAAC8G,GAAG,CAAC,iCAAiC,CAAE/G,IAAI,CAAC,CAEpD;AACA,GAAIA,IAAI,CAACoH,OAAO,EAAIpH,IAAI,CAACoH,OAAO,CAAC,CAAC,CAAC,EAAIpH,IAAI,CAACoH,OAAO,CAAC,CAAC,CAAC,CAACvB,OAAO,CAAE,CAC9D,MAAO,CAAA7F,IAAI,CAACoH,OAAO,CAAC,CAAC,CAAC,CAACvB,OAAO,CAACtG,OAAO,CACxC,CAAC,IAAM,CACL,KAAM,IAAI,CAAAqH,KAAK,CAAC,2CAA2C,CAAC,CAC9D,CACF,CAAE,MAAOS,WAAW,CAAE,CACpBpH,OAAO,CAACrB,KAAK,CAAC,4BAA4B,CAAEyI,WAAW,CAAC,CACxD,KAAM,IAAI,CAAAT,KAAK,CAAC,mFAAmF,CAAC,CACtG,CACF,CACF,CAAC,CAED,KAAM,CAAAU,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,GAAI9I,OAAO,CAACoC,MAAM,GAAK,CAAC,CAAE,MAAO,KAAI,CAErC,mBACEvC,KAAA,QAAKkF,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClCrF,IAAA,OAAAqF,QAAA,CAAI,0BAAc,CAAI,CAAC,CAEtB,CAACvE,SAAS,CAACE,GAAG,eACbd,KAAA,QAAKkF,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eACjCrF,IAAA,OAAAqF,QAAA,CAAI,oBAAkB,CAAI,CAAC,cAC3BnF,KAAA,QAAKkF,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BrF,IAAA,UAAOoJ,OAAO,CAAC,SAAS,CAAA/D,QAAA,CAAC,eAAa,CAAO,CAAC,cAC9CrF,IAAA,UACEwB,IAAI,CAAC,UAAU,CACf6H,EAAE,CAAC,SAAS,CACZC,WAAW,CAAC,iCAAiC,CAC7CC,KAAK,CAAEzI,SAAS,CAACE,GAAI,CACrBwI,QAAQ,CAAGC,CAAC,EAAK1I,YAAY,CAACiG,IAAI,EAAAb,aAAA,CAAAA,aAAA,IAAUa,IAAI,MAAEhG,GAAG,CAAEyI,CAAC,CAACvH,MAAM,CAACqH,KAAK,EAAG,CAAE,CAC3E,CAAC,EACC,CAAC,cACNrJ,KAAA,MAAGkF,SAAS,CAAC,UAAU,CAAAC,QAAA,EAAC,6BACK,cAAArF,IAAA,MAAG0J,IAAI,CAAC,iCAAiC,CAACxH,MAAM,CAAC,QAAQ,CAACyH,GAAG,CAAC,qBAAqB,CAAAtE,QAAA,CAAC,mBAAiB,CAAG,CAAC,EACnI,CAAC,EACD,CACN,cAEDrF,IAAA,QAAKoF,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAC/BrF,IAAA,WACEoF,SAAS,CAAC,uBAAuB,CACjCwE,OAAO,CAAE7C,kBAAmB,CAC5B8C,QAAQ,CAAE3I,UAAU,CAACG,YAAY,EAAI,CAACP,SAAS,CAACE,GAAI,CAAAqE,QAAA,CAEnDnE,UAAU,CAACG,YAAY,CAAG,2BAA2B,CAAG,yBAAyB,CAC5E,CAAC,CACN,CAAC,CAELH,UAAU,CAACT,KAAK,eACfP,KAAA,QAAKkF,SAAS,CAAC,eAAe,CAAAC,QAAA,EAAC,SAC3B,CAACnE,UAAU,CAACT,KAAK,EAChB,CACN,CAEAS,UAAU,CAACG,YAAY,eACtBrB,IAAA,QAAKoF,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAC,6CAEzB,CAAK,CACN,CAEAnE,UAAU,CAACE,OAAO,eACjBpB,IAAA,QAAKoF,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAC/BrF,IAAA,CAACN,aAAa,EACZoK,aAAa,CAAE,CAAChK,SAAS,CAAE,CAC3BiK,UAAU,CAAE,CACVC,IAAI,CAAE1E,SACR,CAAE,CAAAD,QAAA,CAEDnE,UAAU,CAACE,OAAO,CACN,CAAC,CACb,CACN,EACE,CAAC,CAEV,CAAC,CAED,KAAM,CAAA6F,KAAK,CAAGvE,cAAc,CAAC,CAAC,CAE9B,mBACExC,KAAA,QAAKkF,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBnF,KAAA,WAAQkF,SAAS,CAAC,YAAY,CAAAC,QAAA,eAC5BrF,IAAA,OAAAqF,QAAA,CAAI,gCAAoB,CAAI,CAAC,cAC7BrF,IAAA,MAAAqF,QAAA,CAAG,8EAA4E,CAAG,CAAC,EAC7E,CAAC,cAETnF,KAAA,SAAMkF,SAAS,CAAC,UAAU,CAAAC,QAAA,eACxBnF,KAAA,QACEkF,SAAS,gBAAAgC,MAAA,CAAiBzG,UAAU,CAAG,UAAU,CAAG,EAAE,CAAG,CACzDsJ,UAAU,CAAE7H,cAAe,CAC3B8H,WAAW,CAAE5H,eAAgB,CAC7B6H,MAAM,CAAE5H,UAAW,CACnBqH,OAAO,CAAEA,CAAA,QAAAQ,qBAAA,QAAAA,qBAAA,CAAMvJ,YAAY,CAACwJ,OAAO,UAAAD,qBAAA,iBAApBA,qBAAA,CAAsBE,KAAK,CAAC,CAAC,EAAC,CAAAjF,QAAA,eAE7CrF,IAAA,QAAKoF,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,cAAE,CAAK,CAAC,cACrCrF,IAAA,OAAAqF,QAAA,CAAI,sBAAoB,CAAI,CAAC,cAC7BrF,IAAA,MAAAqF,QAAA,CAAG,qDAAmD,CAAG,CAAC,cAC1DrF,IAAA,UACEuK,GAAG,CAAE1J,YAAa,CAClBW,IAAI,CAAC,MAAM,CACXgJ,MAAM,CAAC,MAAM,CACbhB,QAAQ,CAAEzH,gBAAiB,CAC3BiE,KAAK,CAAE,CAAEyE,OAAO,CAAE,MAAO,CAAE,CAC5B,CAAC,cACFzK,IAAA,WAAQoF,SAAS,CAAC,eAAe,CAACwE,OAAO,CAAGH,CAAC,EAAK,KAAAiB,sBAAA,CAChDjB,CAAC,CAACkB,eAAe,CAAC,CAAC,CACnB,CAAAD,sBAAA,CAAA7J,YAAY,CAACwJ,OAAO,UAAAK,sBAAA,iBAApBA,sBAAA,CAAsBJ,KAAK,CAAC,CAAC,CAC/B,CAAE,CAAAjF,QAAA,CAAC,aAEH,CAAQ,CAAC,EACN,CAAC,CAEL5E,KAAK,eACJP,KAAA,QAAKkF,SAAS,CAAC,eAAe,CAAAC,QAAA,EAAC,SAC3B,CAAC5E,KAAK,EACL,CACN,CAEAF,SAAS,eACRP,IAAA,QAAKoF,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAC,qCAEzB,CAAK,CACN,CAEAhF,OAAO,CAACoC,MAAM,CAAG,CAAC,EAAIwE,KAAK,eAC1B/G,KAAA,QAAKkF,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BrF,IAAA,OAAAqF,QAAA,CAAI,kBAAgB,CAAI,CAAC,cAEzBnF,KAAA,QAAKkF,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBnF,KAAA,QAAKkF,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBrF,IAAA,QAAKoF,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAE4B,KAAK,CAACnE,SAAS,CAAM,CAAC,cACnD9C,IAAA,QAAKoF,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,YAAU,CAAK,CAAC,EACzC,CAAC,cACNnF,KAAA,QAAKkF,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBrF,IAAA,QAAKoF,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAE4B,KAAK,CAACxD,YAAY,CAAM,CAAC,cACtDzD,IAAA,QAAKoF,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,SAAO,CAAK,CAAC,EACtC,CAAC,cACNnF,KAAA,QAAKkF,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBrF,IAAA,QAAKoF,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAE4B,KAAK,CAAClE,cAAc,CAAM,CAAC,cACxD/C,IAAA,QAAKoF,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,iBAAe,CAAK,CAAC,EAC9C,CAAC,cACNnF,KAAA,QAAKkF,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBnF,KAAA,QAAKkF,SAAS,CAAC,YAAY,CAAAC,QAAA,EAAE4B,KAAK,CAACvD,iBAAiB,CAAC,GAAC,EAAK,CAAC,cAC5D1D,IAAA,QAAKoF,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,cAAY,CAAK,CAAC,EAC3C,CAAC,EACH,CAAC,cAENrF,IAAA,QAAKoF,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAC7BxB,WAAW,CAAC,CAAC,CACX,CAAC,CAELsB,eAAe,CAAC,CAAC,CAEjBgE,gBAAgB,CAAC,CAAC,EAChB,CACN,EACG,CAAC,EACJ,CAAC,CAEV,CAAC,CAED,cAAe,CAAA/I,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}