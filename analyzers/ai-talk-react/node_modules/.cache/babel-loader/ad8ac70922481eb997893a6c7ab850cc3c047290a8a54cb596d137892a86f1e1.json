{"ast":null,"code":"var _jsxFileName = \"d:\\\\AIE\\\\analyzers\\\\ai-talk-react\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { oneDark } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport remarkGfm from 'remark-gfm';\nimport './App.css';\n\n// Types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Custom components for markdown rendering\nconst CodeBlock = ({\n  node,\n  inline,\n  className,\n  children,\n  ...props\n}) => {\n  const match = /language-(\\w+)/.exec(className || '');\n  const language = match ? match[1] : '';\n  return !inline && language ? /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n    style: oneDark,\n    language: language,\n    PreTag: \"div\",\n    showLineNumbers: true,\n    wrapLines: true,\n    ...props,\n    children: String(children).replace(/\\n$/, '')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"code\", {\n    className: className,\n    ...props,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_c = CodeBlock;\nconst App = () => {\n  _s();\n  // State management\n  const [messages, setMessages] = useState([{\n    id: '1',\n    type: 'ai',\n    content: `# Hello! 👋 I'm Qwen, your AI assistant\n\nI can help you with **programming**, **mathematics**, **creative ideas**, and much more!\n\n## What I can do:\n\n- 💻 **Code Examples**: I can write and explain code in multiple languages\n- 📊 **Data Analysis**: Help with algorithms and data structures\n- 🎨 **Creative Writing**: Generate stories, poems, and content\n- 🔧 **Problem Solving**: Debug code and solve technical issues\n- 📚 **Learning**: Explain concepts with clear examples\n\n### Try asking me:\n- \"Write a Python function to calculate fibonacci numbers\"\n- \"Explain how React hooks work\"\n- \"Create a CSS animation for a loading spinner\"\n- \"Help me optimize this SQL query\"\n\n**Just type your question below and let's get started! 🚀**`,\n    timestamp: new Date()\n  }]);\n  const [apiConfig, setApiConfig] = useState({\n    key: '',\n    endpoint: 'https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions'\n  });\n  const [chatStats, setChatStats] = useState({\n    messages: 1,\n    sessionTime: '00:00',\n    status: 'Ready'\n  });\n  const [currentMessage, setCurrentMessage] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [error, setError] = useState('');\n  const [sessionStart] = useState(new Date());\n\n  // Refs\n  const messagesEndRef = useRef(null);\n  const chatInputRef = useRef(null);\n\n  // Load API config from localStorage on mount\n  useEffect(() => {\n    const saved = localStorage.getItem('qwen-api-config');\n    if (saved) {\n      try {\n        const parsed = JSON.parse(saved);\n        setApiConfig(parsed);\n      } catch (error) {\n        console.error('Error parsing saved API config:', error);\n      }\n    }\n\n    // Load environment config (if available)\n    loadEnvironmentConfig();\n  }, []);\n\n  // Update session time every second\n  useEffect(() => {\n    const interval = setInterval(updateSessionTime, 1000);\n    return () => clearInterval(interval);\n  }, [sessionStart]);\n\n  // Auto-scroll to bottom when new messages are added\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const loadEnvironmentConfig = async () => {\n    try {\n      // Try to load .env file (only works locally with a server)\n      const response = await fetch('./.env');\n      if (response.ok) {\n        const envText = await response.text();\n        const envVars = parseEnvFile(envText);\n        if (envVars.QWEN_API_KEY && envVars.QWEN_API_KEY !== 'your_qwen_api_key_here') {\n          setApiConfig(prev => ({\n            ...prev,\n            key: envVars.QWEN_API_KEY\n          }));\n        }\n        if (envVars.QWEN_API_ENDPOINT) {\n          setApiConfig(prev => ({\n            ...prev,\n            endpoint: envVars.QWEN_API_ENDPOINT\n          }));\n        }\n        console.log('Environment configuration loaded from .env file');\n      }\n    } catch (error) {\n      console.log('No .env file found, using manual configuration');\n    }\n  };\n  const parseEnvFile = envText => {\n    const envVars = {};\n    const lines = envText.split('\\n');\n    for (const line of lines) {\n      const trimmedLine = line.trim();\n      if (trimmedLine && !trimmedLine.startsWith('#')) {\n        const [key, ...valueParts] = trimmedLine.split('=');\n        if (key && valueParts.length > 0) {\n          envVars[key.trim()] = valueParts.join('=').trim();\n        }\n      }\n    }\n    return envVars;\n  };\n  const updateSessionTime = () => {\n    const elapsed = Math.floor((Date.now() - sessionStart.getTime()) / 1000);\n    const minutes = Math.floor(elapsed / 60);\n    const seconds = elapsed % 60;\n    const formattedTime = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n    setChatStats(prev => ({\n      ...prev,\n      sessionTime: formattedTime\n    }));\n  };\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const saveApiConfig = () => {\n    localStorage.setItem('qwen-api-config', JSON.stringify(apiConfig));\n\n    // Visual feedback (you could enhance this with a toast notification)\n    console.log('API configuration saved successfully');\n  };\n  const handleApiConfigChange = (field, value) => {\n    setApiConfig(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const addMessage = (type, content) => {\n    const newMessage = {\n      id: Date.now().toString() + Math.random().toString(36).substring(2, 11),\n      type,\n      content,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, newMessage]);\n    setChatStats(prev => ({\n      ...prev,\n      messages: prev.messages + 1\n    }));\n  };\n  const clearChat = () => {\n    if (window.confirm('Are you sure you want to clear all messages?')) {\n      setMessages([{\n        id: '1',\n        type: 'ai',\n        content: \"Chat cleared! How can I help you today?\",\n        timestamp: new Date()\n      }]);\n      setChatStats(prev => ({\n        ...prev,\n        messages: 1,\n        status: 'Ready'\n      }));\n      setError('');\n    }\n  };\n  const showError = message => {\n    setError(message);\n    setTimeout(() => setError(''), 5000);\n  };\n  const callQwenAPI = async message => {\n    // Try the DashScope native API first\n    try {\n      const response = await fetch('https://dashscope.aliyuncs.com/api/v1/services/aigc/text-generation/generation', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${apiConfig.key}`,\n          'X-DashScope-SSE': 'disable'\n        },\n        body: JSON.stringify({\n          model: 'qwen-turbo',\n          input: {\n            messages: [{\n              role: 'system',\n              content: 'You are Qwen, a helpful and intelligent AI assistant. Provide clear, accurate, and engaging responses.'\n            }, {\n              role: 'user',\n              content: message\n            }]\n          },\n          parameters: {\n            max_tokens: 1000,\n            temperature: 0.7\n          }\n        })\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('DashScope API Error:', errorText);\n        throw new Error(`API request failed: ${response.status} - ${errorText}`);\n      }\n      const data = await response.json();\n      console.log('DashScope API Response:', data);\n\n      // DashScope native format\n      if (data.output && data.output.text) {\n        return data.output.text;\n      } else {\n        throw new Error('Invalid DashScope response format');\n      }\n    } catch (dashScopeError) {\n      console.warn('DashScope API failed, trying OpenAI-compatible endpoint:', dashScopeError);\n\n      // Fallback to OpenAI-compatible endpoint\n      try {\n        const response = await fetch('https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${apiConfig.key}`,\n            'X-DashScope-SSE': 'disable'\n          },\n          body: JSON.stringify({\n            model: 'qwen-turbo',\n            messages: [{\n              role: 'system',\n              content: 'You are Qwen, a helpful and intelligent AI assistant. Provide clear, accurate, and engaging responses.'\n            }, {\n              role: 'user',\n              content: message\n            }],\n            max_tokens: 1000,\n            temperature: 0.7,\n            stream: false\n          })\n        });\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`OpenAI-compatible API failed: ${response.status} - ${errorText}`);\n        }\n        const data = await response.json();\n        console.log('OpenAI-compatible API Response:', data);\n\n        // OpenAI-compatible format\n        if (data.choices && data.choices[0] && data.choices[0].message) {\n          return data.choices[0].message.content;\n        } else {\n          throw new Error('Invalid OpenAI-compatible response format');\n        }\n      } catch (openAIError) {\n        console.error('Both API endpoints failed:', openAIError);\n        throw new Error('Failed to connect to Qwen API. Please check your API key and internet connection.');\n      }\n    }\n  };\n  const sendMessage = async () => {\n    const message = currentMessage.trim();\n    if (!message) return;\n    if (!apiConfig.key) {\n      showError('Please configure your Qwen API key first!');\n      return;\n    }\n\n    // Add user message\n    addMessage('user', message);\n    setCurrentMessage('');\n\n    // Show typing indicator\n    setIsTyping(true);\n    setChatStats(prev => ({\n      ...prev,\n      status: 'Thinking...'\n    }));\n    try {\n      const response = await callQwenAPI(message);\n      addMessage('ai', response);\n      setChatStats(prev => ({\n        ...prev,\n        status: 'Ready'\n      }));\n    } catch (error) {\n      console.error('API Error:', error);\n      showError('Failed to get response from Qwen API. Please check your API key and try again.');\n      setChatStats(prev => ({\n        ...prev,\n        status: 'Error'\n      }));\n    } finally {\n      setIsTyping(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-talk-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"chat-title\",\n        children: \"AI Talk - Qwen Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"chat-subtitle\",\n        children: \"Have intelligent conversations with Qwen AI. Ask questions, get coding help, and explore creative ideas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"api-config\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-key\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this), \" API Configuration\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"api-input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"api-label\",\n              htmlFor: \"api-key\",\n              children: \"Qwen API Key:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"api-key\",\n              className: \"api-input\",\n              placeholder: \"Enter your Qwen API key here...\",\n              value: apiConfig.key,\n              onChange: e => handleApiConfigChange('key', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"api-input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"api-label\",\n              htmlFor: \"api-endpoint\",\n              children: \"API Endpoint:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"api-endpoint\",\n              className: \"api-input\",\n              placeholder: \"API endpoint URL\",\n              value: apiConfig.endpoint,\n              onChange: e => handleApiConfigChange('endpoint', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"api-save-btn\",\n            onClick: saveApiConfig,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this), \" Save Configuration\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Messages:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: chatStats.messages\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Session:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: chatStats.sessionTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: chatStats.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-chat-btn\",\n          onClick: clearChat,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-trash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this), \" Clear Chat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.type}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: `fas ${message.type === 'user' ? 'fa-user' : 'fa-robot'}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 19\n              }, this), message.type === 'user' ? 'You' : 'Qwen AI']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: message.type === 'user' ? message.content : /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                remarkPlugins: [remarkGfm],\n                components: {\n                  code: CodeBlock\n                },\n                children: message.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 17\n            }, this)]\n          }, message.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-circle-notch fa-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 17\n            }, this), \" Qwen is thinking...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [\"\\u274C \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: chatInputRef,\n            className: \"chat-input\",\n            placeholder: \"Type your message here... (Press Enter to send, Shift+Enter for new line)\",\n            rows: 3,\n            value: currentMessage,\n            onChange: e => setCurrentMessage(e.target.value),\n            onKeyPress: handleKeyPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"send-btn\",\n            onClick: sendMessage,\n            disabled: !currentMessage.trim() || isTyping,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-paper-plane\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 15\n            }, this), \" Send\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 358,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"WDmKzW+iWGoBr9W5p2AQ/epuBrI=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"CodeBlock\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ReactMarkdown","Prism","SyntaxHighlighter","oneDark","remarkGfm","jsxDEV","_jsxDEV","CodeBlock","node","inline","className","children","props","match","exec","language","style","PreTag","showLineNumbers","wrapLines","String","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","messages","setMessages","id","type","content","timestamp","Date","apiConfig","setApiConfig","key","endpoint","chatStats","setChatStats","sessionTime","status","currentMessage","setCurrentMessage","isTyping","setIsTyping","error","setError","sessionStart","messagesEndRef","chatInputRef","saved","localStorage","getItem","parsed","JSON","parse","console","loadEnvironmentConfig","interval","setInterval","updateSessionTime","clearInterval","scrollToBottom","response","fetch","ok","envText","text","envVars","parseEnvFile","QWEN_API_KEY","prev","QWEN_API_ENDPOINT","log","lines","split","line","trimmedLine","trim","startsWith","valueParts","length","join","elapsed","Math","floor","now","getTime","minutes","seconds","formattedTime","toString","padStart","_messagesEndRef$curre","current","scrollIntoView","behavior","saveApiConfig","setItem","stringify","handleApiConfigChange","field","value","addMessage","newMessage","random","substring","clearChat","window","confirm","showError","message","setTimeout","callQwenAPI","method","headers","body","model","input","role","parameters","max_tokens","temperature","errorText","Error","data","json","output","dashScopeError","warn","stream","choices","openAIError","sendMessage","handleKeyPress","e","shiftKey","preventDefault","htmlFor","placeholder","onChange","target","onClick","map","remarkPlugins","components","code","ref","rows","onKeyPress","disabled","_c2","$RefreshReg$"],"sources":["d:/AIE/analyzers/ai-talk-react/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport { oneDark } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\nimport remarkGfm from 'remark-gfm';\r\nimport './App.css';\r\n\r\n// Types\r\ninterface Message {\r\n  id: string;\r\n  type: 'user' | 'ai';\r\n  content: string;\r\n  timestamp: Date;\r\n}\r\n\r\ninterface ApiConfig {\r\n  key: string;\r\n  endpoint: string;\r\n}\r\n\r\ninterface ChatStats {\r\n  messages: number;\r\n  sessionTime: string;\r\n  status: 'Ready' | 'Thinking...' | 'Error';\r\n}\r\n\r\n// Custom components for markdown rendering\r\nconst CodeBlock = ({ node, inline, className, children, ...props }: any) => {\r\n  const match = /language-(\\w+)/.exec(className || '');\r\n  const language = match ? match[1] : '';\r\n\r\n  return !inline && language ? (\r\n    <SyntaxHighlighter\r\n      style={oneDark}\r\n      language={language}\r\n      PreTag=\"div\"\r\n      showLineNumbers={true}\r\n      wrapLines={true}\r\n      {...props}\r\n    >\r\n      {String(children).replace(/\\n$/, '')}\r\n    </SyntaxHighlighter>\r\n  ) : (\r\n    <code className={className} {...props}>\r\n      {children}\r\n    </code>\r\n  );\r\n};\r\n\r\nconst App: React.FC = () => {\r\n  // State management\r\n  const [messages, setMessages] = useState<Message[]>([\r\n    {\r\n      id: '1',\r\n      type: 'ai',\r\n      content: `# Hello! 👋 I'm Qwen, your AI assistant\r\n\r\nI can help you with **programming**, **mathematics**, **creative ideas**, and much more!\r\n\r\n## What I can do:\r\n\r\n- 💻 **Code Examples**: I can write and explain code in multiple languages\r\n- 📊 **Data Analysis**: Help with algorithms and data structures\r\n- 🎨 **Creative Writing**: Generate stories, poems, and content\r\n- 🔧 **Problem Solving**: Debug code and solve technical issues\r\n- 📚 **Learning**: Explain concepts with clear examples\r\n\r\n### Try asking me:\r\n- \"Write a Python function to calculate fibonacci numbers\"\r\n- \"Explain how React hooks work\"\r\n- \"Create a CSS animation for a loading spinner\"\r\n- \"Help me optimize this SQL query\"\r\n\r\n**Just type your question below and let's get started! 🚀**`,\r\n      timestamp: new Date()\r\n    }\r\n  ]);\r\n\r\n  const [apiConfig, setApiConfig] = useState<ApiConfig>({\r\n    key: '',\r\n    endpoint: 'https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions'\r\n  });\r\n\r\n  \r\n  const [chatStats, setChatStats] = useState<ChatStats>({\r\n    messages: 1,\r\n    sessionTime: '00:00',\r\n    status: 'Ready'\r\n  });\r\n\r\n  const [currentMessage, setCurrentMessage] = useState<string>('');\r\n  const [isTyping, setIsTyping] = useState<boolean>(false);\r\n  const [error, setError] = useState<string>('');\r\n  const [sessionStart] = useState<Date>(new Date());\r\n\r\n  // Refs\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n  const chatInputRef = useRef<HTMLTextAreaElement>(null);\r\n\r\n  // Load API config from localStorage on mount\r\n  useEffect(() => {\r\n    const saved = localStorage.getItem('qwen-api-config');\r\n    if (saved) {\r\n      try {\r\n        const parsed = JSON.parse(saved);\r\n        setApiConfig(parsed);\r\n      } catch (error) {\r\n        console.error('Error parsing saved API config:', error);\r\n      }\r\n    }\r\n\r\n    // Load environment config (if available)\r\n    loadEnvironmentConfig();\r\n  }, []);\r\n\r\n  // Update session time every second\r\n  useEffect(() => {\r\n    const interval = setInterval(updateSessionTime, 1000);\r\n    return () => clearInterval(interval);\r\n  }, [sessionStart]);\r\n\r\n  // Auto-scroll to bottom when new messages are added\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const loadEnvironmentConfig = async () => {\r\n    try {\r\n      // Try to load .env file (only works locally with a server)\r\n      const response = await fetch('./.env');\r\n      if (response.ok) {\r\n        const envText = await response.text();\r\n        const envVars = parseEnvFile(envText);\r\n\r\n        if (envVars.QWEN_API_KEY && envVars.QWEN_API_KEY !== 'your_qwen_api_key_here') {\r\n          setApiConfig((prev: ApiConfig) => ({ ...prev, key: envVars.QWEN_API_KEY }));\r\n        }\r\n\r\n        if (envVars.QWEN_API_ENDPOINT) {\r\n          setApiConfig((prev: ApiConfig) => ({ ...prev, endpoint: envVars.QWEN_API_ENDPOINT }));\r\n        }\r\n\r\n        console.log('Environment configuration loaded from .env file');\r\n      }\r\n    } catch (error) {\r\n      console.log('No .env file found, using manual configuration');\r\n    }\r\n  };\r\n\r\n  const parseEnvFile = (envText: string): Record<string, string> => {\r\n    const envVars: Record<string, string> = {};\r\n    const lines = envText.split('\\n');\r\n\r\n    for (const line of lines) {\r\n      const trimmedLine = line.trim();\r\n      if (trimmedLine && !trimmedLine.startsWith('#')) {\r\n        const [key, ...valueParts] = trimmedLine.split('=');\r\n        if (key && valueParts.length > 0) {\r\n          envVars[key.trim()] = valueParts.join('=').trim();\r\n        }\r\n      }\r\n    }\r\n\r\n    return envVars;\r\n  };\r\n\r\n  const updateSessionTime = () => {\r\n    const elapsed = Math.floor((Date.now() - sessionStart.getTime()) / 1000);\r\n    const minutes = Math.floor(elapsed / 60);\r\n    const seconds = elapsed % 60;\r\n    const formattedTime = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n\r\n    setChatStats((prev: ChatStats) => ({ ...prev, sessionTime: formattedTime }));\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  const saveApiConfig = () => {\r\n    localStorage.setItem('qwen-api-config', JSON.stringify(apiConfig));\r\n\r\n    // Visual feedback (you could enhance this with a toast notification)\r\n    console.log('API configuration saved successfully');\r\n  };\r\n\r\n  const handleApiConfigChange = (field: keyof ApiConfig, value: string) => {\r\n    setApiConfig((prev: ApiConfig) => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  const addMessage = (type: 'user' | 'ai', content: string) => {\r\n    const newMessage: Message = {\r\n      id: Date.now().toString() + Math.random().toString(36).substring(2, 11),\r\n      type,\r\n      content,\r\n      timestamp: new Date()\r\n    };\r\n\r\n    setMessages((prev: Message[]) => [...prev, newMessage]);\r\n    setChatStats((prev: ChatStats) => ({ ...prev, messages: prev.messages + 1 }));\r\n  };\r\n\r\n  const clearChat = () => {\r\n    if (window.confirm('Are you sure you want to clear all messages?')) {\r\n      setMessages([\r\n        {\r\n          id: '1',\r\n          type: 'ai',\r\n          content: \"Chat cleared! How can I help you today?\",\r\n          timestamp: new Date()\r\n        }\r\n      ]);\r\n      setChatStats((prev: ChatStats) => ({ ...prev, messages: 1, status: 'Ready' }));\r\n      setError('');\r\n    }\r\n  };\r\n\r\n  const showError = (message: string) => {\r\n    setError(message);\r\n    setTimeout(() => setError(''), 5000);\r\n  };\r\n\r\n  const callQwenAPI = async (message: string): Promise<string> => {\r\n    // Try the DashScope native API first\r\n    try {\r\n      const response = await fetch('https://dashscope.aliyuncs.com/api/v1/services/aigc/text-generation/generation', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${apiConfig.key}`,\r\n          'X-DashScope-SSE': 'disable'\r\n        },\r\n        body: JSON.stringify({\r\n          model: 'qwen-turbo',\r\n          input: {\r\n            messages: [\r\n              {\r\n                role: 'system',\r\n                content: 'You are Qwen, a helpful and intelligent AI assistant. Provide clear, accurate, and engaging responses.'\r\n              },\r\n              {\r\n                role: 'user',\r\n                content: message\r\n              }\r\n            ]\r\n          },\r\n          parameters: {\r\n            max_tokens: 1000,\r\n            temperature: 0.7\r\n          }\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        console.error('DashScope API Error:', errorText);\r\n        throw new Error(`API request failed: ${response.status} - ${errorText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('DashScope API Response:', data);\r\n\r\n      // DashScope native format\r\n      if (data.output && data.output.text) {\r\n        return data.output.text;\r\n      } else {\r\n        throw new Error('Invalid DashScope response format');\r\n      }\r\n    } catch (dashScopeError) {\r\n      console.warn('DashScope API failed, trying OpenAI-compatible endpoint:', dashScopeError);\r\n\r\n      // Fallback to OpenAI-compatible endpoint\r\n      try {\r\n        const response = await fetch('https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${apiConfig.key}`,\r\n            'X-DashScope-SSE': 'disable'\r\n          },\r\n          body: JSON.stringify({\r\n            model: 'qwen-turbo',\r\n            messages: [\r\n              {\r\n                role: 'system',\r\n                content: 'You are Qwen, a helpful and intelligent AI assistant. Provide clear, accurate, and engaging responses.'\r\n              },\r\n              {\r\n                role: 'user',\r\n                content: message\r\n              }\r\n            ],\r\n            max_tokens: 1000,\r\n            temperature: 0.7,\r\n            stream: false\r\n          })\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const errorText = await response.text();\r\n          throw new Error(`OpenAI-compatible API failed: ${response.status} - ${errorText}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('OpenAI-compatible API Response:', data);\r\n\r\n        // OpenAI-compatible format\r\n        if (data.choices && data.choices[0] && data.choices[0].message) {\r\n          return data.choices[0].message.content;\r\n        } else {\r\n          throw new Error('Invalid OpenAI-compatible response format');\r\n        }\r\n      } catch (openAIError) {\r\n        console.error('Both API endpoints failed:', openAIError);\r\n        throw new Error('Failed to connect to Qwen API. Please check your API key and internet connection.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    const message = currentMessage.trim();\r\n    if (!message) return;\r\n\r\n    if (!apiConfig.key) {\r\n      showError('Please configure your Qwen API key first!');\r\n      return;\r\n    }\r\n\r\n    // Add user message\r\n    addMessage('user', message);\r\n    setCurrentMessage('');\r\n\r\n    // Show typing indicator\r\n    setIsTyping(true);\r\n    setChatStats((prev: ChatStats) => ({ ...prev, status: 'Thinking...' }));\r\n\r\n    try {\r\n      const response = await callQwenAPI(message);\r\n      addMessage('ai', response);\r\n      setChatStats((prev: ChatStats) => ({ ...prev, status: 'Ready' }));\r\n    } catch (error) {\r\n      console.error('API Error:', error);\r\n      showError('Failed to get response from Qwen API. Please check your API key and try again.');\r\n      setChatStats((prev: ChatStats) => ({ ...prev, status: 'Error' }));\r\n    } finally {\r\n      setIsTyping(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"ai-talk-container\">\r\n      <div className=\"chat-header\">\r\n        <h1 className=\"chat-title\">AI Talk - Qwen Assistant</h1>\r\n        <p className=\"chat-subtitle\">\r\n          Have intelligent conversations with Qwen AI. Ask questions, get coding help, and explore creative ideas.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"chat-layout\">\r\n        {/* Sidebar */}\r\n        <div className=\"chat-sidebar\">\r\n          <div className=\"api-config\">\r\n            <h3><i className=\"fas fa-key\"></i> API Configuration</h3>\r\n            <div className=\"api-input-group\">\r\n              <label className=\"api-label\" htmlFor=\"api-key\">Qwen API Key:</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"api-key\"\r\n                className=\"api-input\"\r\n                placeholder=\"Enter your Qwen API key here...\"\r\n                value={apiConfig.key}\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleApiConfigChange('key', e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"api-input-group\">\r\n              <label className=\"api-label\" htmlFor=\"api-endpoint\">API Endpoint:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"api-endpoint\"\r\n                className=\"api-input\"\r\n                placeholder=\"API endpoint URL\"\r\n                value={apiConfig.endpoint}\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleApiConfigChange('endpoint', e.target.value)}\r\n              />\r\n            </div>\r\n            <button className=\"api-save-btn\" onClick={saveApiConfig}>\r\n              <i className=\"fas fa-save\"></i> Save Configuration\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"chat-stats\">\r\n            <div className=\"stat-item\">\r\n              <span>Messages:</span>\r\n              <span className=\"stat-value\">{chatStats.messages}</span>\r\n            </div>\r\n            <div className=\"stat-item\">\r\n              <span>Session:</span>\r\n              <span className=\"stat-value\">{chatStats.sessionTime}</span>\r\n            </div>\r\n            <div className=\"stat-item\">\r\n              <span>Status:</span>\r\n              <span className=\"stat-value\">{chatStats.status}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <button className=\"clear-chat-btn\" onClick={clearChat}>\r\n            <i className=\"fas fa-trash\"></i> Clear Chat\r\n          </button>\r\n        </div>\r\n\r\n        {/* Main Chat Area */}\r\n        <div className=\"chat-main\">\r\n          <div className=\"chat-messages\">\r\n            {messages.map((message: Message) => (\r\n              <div key={message.id} className={`message ${message.type}`}>\r\n                <div className=\"message-header\">\r\n                  <i className={`fas ${message.type === 'user' ? 'fa-user' : 'fa-robot'}`}></i>\r\n                  {message.type === 'user' ? 'You' : 'Qwen AI'}\r\n                </div>\r\n                <div className=\"message-content\">\r\n                  {message.type === 'user' ? (\r\n                    message.content\r\n                  ) : (\r\n                    <ReactMarkdown\r\n                      remarkPlugins={[remarkGfm]}\r\n                      components={{\r\n                        code: CodeBlock,\r\n                      }}\r\n                    >\r\n                      {message.content}\r\n                    </ReactMarkdown>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n\r\n            {isTyping && (\r\n              <div className=\"typing-indicator\">\r\n                <i className=\"fas fa-circle-notch fa-spin\"></i> Qwen is thinking...\r\n              </div>\r\n            )}\r\n\r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n\r\n          {error && (\r\n            <div className=\"error-message\">\r\n              ❌ {error}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"chat-input-area\">\r\n            <textarea\r\n              ref={chatInputRef}\r\n              className=\"chat-input\"\r\n              placeholder=\"Type your message here... (Press Enter to send, Shift+Enter for new line)\"\r\n              rows={3}\r\n              value={currentMessage}\r\n              onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => setCurrentMessage(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n            />\r\n            <button\r\n              className=\"send-btn\"\r\n              onClick={sendMessage}\r\n              disabled={!currentMessage.trim() || isTyping}\r\n            >\r\n              <i className=\"fas fa-paper-plane\"></i> Send\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}